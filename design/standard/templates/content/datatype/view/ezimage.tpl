{* DO NOT EDIT THIS FILE! Use an override template instead. *}
{*
Input:
 image_class - Which image alias to show, default is large
 css_class     - Optional css class to wrap around the <img> tag, the
                 class will be placed in a <div> tag.
 alignment     - How to align the image, use 'left', 'right' or false().
 link_to_image - boolean, if true the url_alias will be fetched and
                 used as link.
 href          - Optional string, if set it will create a <a> tag
                 around the image with href as the link.
 border_size   - Size of border around image, default is 0
*}
{default image_class=large
         css_class=false()
         alignment=false()
         link_to_image=false()
         href=false()
         target=false()
         hspace=false()
         border_size=0
         border_color=''
         border_style=''
         margin=''
         alt_text=''
         title=''
         inline_style = ''}

{let image_content = $attribute.content}

{if $image_content.is_valid}

    {let image        = $image_content[$image_class]}
	
	{if is_set($#is_newsletter_html) }
		{append-block scope=global variable=$imageFileList}{$image.full_path};{$image.url|ezurl(no)}{/append-block}
	{/if}
	
	{default $attr_width=$image.width
			 $attr_height=$image.height
			 $ratio=false() }
	{if or( is_unset($attr_width), $attr_width|trim('')|eq('') ) }
		{set $attr_width=$image.width }
	{/if}
	{if or( is_unset($attr_height), $attr_height|trim('')|eq('') ) }
		{set $attr_height=$image.height }
	{/if}
	{if and( is_set($max_attr_width), $max_attr_width|trim('')|ne(''), $attr_width|gt($max_attr_width) ) }
		{set $ratio=$attr_width|div($attr_height)
			 $attr_width=$max_attr_width
			 $attr_height=$attr_width|div($ratio)|int()}
	{/if}
	{if and( is_set($max_attr_height), $max_attr_height|trim('')|ne(''), $attr_height|gt($max_attr_height) ) }
		{set $ratio=$attr_width|div($attr_height)
			 $attr_height=$max_attr_height
			 $attr_width=$attr_height|mul($ratio)|int()}
	{/if}

    {if $link_to_image}
        {set href = $image_content['original'].url|ezroot}
    {/if}
    {switch match=$alignment}
    {case match='left'}
        <div class="imageleft">
    {/case}
    {case match='right'}
        <div class="imageright">
    {/case}
    {case/}
    {/switch}

    {if $css_class}
    	{if $inline|not}
       		<div class="{$css_class|wash}">
       	{else}
    		<span class="{$css_class|wash}">
    	{/if}
    {/if}

    {if and( is_set( $image ), $image )}
        {if $alt_text|not}
            {if $image.text}
                {set $alt_text = $image.text}
            {else}
                {set $alt_text = $attribute.object.name}
            {/if}
        {/if}
        {if $title|not}
            {set $title = $alt_text}
        {/if}
        {if $border_size|ne(0)}
            {set $inline_style = concat( $inline_style, 'border: ', $border_size, ' ', $border_style, ' ', $border_color, ';' )}
        {/if}
        {if $margin|trim|ne('')}
            {set $inline_style = concat( $inline_style, 'margin: ', $margin, ';' )}
        {/if}
        {if $href}{set $href=$href|ezurl(no)}{if and(is_set($#host_path), $href|begins_with('/'))}{set $href=concat($#host_path, $href)}{/if}<a href="{$href}"{if and( is_set( $link_class ), $link_class )} class="{$link_class}"{/if}{if and( is_set( $link_id ), $link_id )} id="{$link_id}"{/if}{if $target} target="{$target}"{/if}>{/if}
        {def $img_url=$image.url|ezroot(no)}{if and(is_set($#image_host_path), is_unset($#is_newsletter_html), $img_url|begins_with('/'))}{set $img_url=concat($#image_host_path, $img_url)}{/if}
		<img src="{$img_url}" width="{$attr_width}" height="{$attr_height}" {if $hspace}hspace="{$hspace}"{/if}{if $inline_style|ne('')} style="{$inline_style}"{/if} alt="{$alt_text|wash(xhtml)}" title="{$title|wash(xhtml)}" />
        {if $href}</a>{/if}
    {/if}

    {if $css_class}
    	{if $inline|not}
    		</div>
       	{else}
    		</span>
    	{/if}
    {/if}

    {switch match=$alignment}
    {case match='left'}
        </div>
    {/case}
    {case match='right'}
        </div>
    {/case}
    {case/}
    {/switch}
	
	{/default}

    {/let}

{/if}

{/let}

{/default}
