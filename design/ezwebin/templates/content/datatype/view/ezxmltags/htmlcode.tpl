{* DO NOT EDIT THIS FILE! Use an override template instead. *}
{default $classification=''}
{def $embed_style=''
	 $wrapper_style=''}
{default $class_styles=ezini( 'sOExtraSettings', 'ClassStyles', 'soextra.ini',,true() )}{*
*}{if and( or(is_set($#use_inline_styles), is_set($use_inline_styles)), $classification|trim, is_set($class_styles[$classification]) )}{*
	*}{set $embed_style=concat($embed_style, $class_styles[$classification]|wash) }{*
*}{/if}{*
*}{if and( is_set( $fontclass ), $fontclass|trim )}{*
	*}{if and( or(is_set($#use_inline_styles), is_set($use_inline_styles)), is_set($class_styles[$fontclass]) ) }{*
		*}{set $embed_style=concat($embed_style, $class_styles[$fontclass]|wash) }{*
	*}{else}{*
		*}{set $classification = concat( $classification, ' ', $fontclass ) }{*
	*}{/if}{*
*}{/if}
{if and(is_set( $align ), $align|trim, or(is_set($#use_inline_styles), is_set($use_inline_styles) ) )}
	{if and( is_set($display_inline), $display_inline )}
		{set $embed_style=concat($embed_style, cond($align|eq('right'), 'clear:right;float:right;', 'clear:left;float:left;') ) }
	{elseif $align|eq('right') }
		{set $wrapper_style=concat($wrapper_style, 'margin-left:auto;margin-right:0;') }
	{elseif $align|eq('left') }
		{set $wrapper_style=concat($wrapper_style, 'margin-left:0;margin-right:auto;') }
	{elseif $align|eq('center') }
		{set $wrapper_style=concat($wrapper_style, 'margin-left:auto;margin-right:auto;') }
	{/if}
{/if}
{if and(is_set($margin), $margin|trim)}{set $embed_style=concat($embed_style, 'margin:', $margin|wash, '; ') }{set $margin=''}{/if}
{if and(is_set($padding), $padding|trim)}{set $embed_style=concat($embed_style, 'padding:', $padding|wash, '; ') }{set $padding=''}{/if}
{if and(is_set($border), $border|trim)}{set $embed_style=concat($embed_style, 'border:', $border|wash, '; ') }{set $border=''}{else}
{if and(is_set($border_color), $border_color|trim)}{set $embed_style=concat($embed_style, 'border-color:', $border_color|wash, '; ') }{set $border_color=''}{/if}
{if and(is_set($border_style), $border_style|trim)}{set $embed_style=concat($embed_style, 'border-style:', $border_style|wash, '; ') }{set $border_style=''}{/if}
{if and(is_set($border_size), $border_size|trim)}{set $embed_style=concat($embed_style, 'border-width:', $border_size|wash, '; ') }{set $border_size=''}{/if}{/if}
{if and( is_set($display_inline), $display_inline|trim )}{if and( is_set($attr_width), $attr_width|ne('') )}{set $embed_style=concat($embed_style, 'width:', $attr_width|wash, 'px; ') }{/if}{if and( is_set($attr_height), $attr_height|trim|ne('') )}{set $embed_style=concat($embed_style, 'height:', $attr_height|wash, 'px; ') }{/if}{/if}
<div class="htmlcode{if and( is_set($display_inline), $display_inline) }-inline{/if} {if and( is_unset($in_oe), is_set($align), $align )} object-{$align}{/if}{if ne($classification|trim,'')} {$classification|wash}{/if}"{if $embed_style|ne('') style="{$embed_style}"{/if}>
{if or( is_unset($display_inline), $display_inline|eq('') )}
	<div class="htmlcode-wrapper" style="{$wrapper_style}{if and( is_set($attr_width), $attr_width|ne('') )}width:{$attr_width}px; {/if}{if and( is_set($attr_height), $attr_height|ne('') )}height:{$attr_height}px;{/if}">
{/if}
{def $display=$htmlcontent|js_unescape}
{if and( is_set($attr_width), $attr_width|ne('') )}
	{set $display = $display|preg_replace( '/width="(\d+)"/i', concat('width="', $attr_width, '"') ) }
{/if}
{if and( is_set($attr_height), $attr_height|ne('') )}
	{set $display = $display|preg_replace( '/height="(\d+)"/i', concat('height="', $attr_height, '"') ) }
{/if}
{$display}
{if or( is_unset($display_inline), $display_inline|eq('') )}
	</div>
{/if}
</div>